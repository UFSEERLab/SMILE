---
title: "EPI Research day"
format: pptx
self-contained: true
execute: 
  echo: true
---


```{r message=FALSE, warning=FALSE, echo=FALSE}
library(tidyverse)
library(cowplot)
```


```{r echo=FALSE}
source(file = "../smile_main.R")
```

```{r echo=FALSE}

build_SMILE_plots <- function(smile_output_as_df) {
  smile_output_as_df %>% 
    pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
    mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
    ggplot(aes(x = week, y = n)) +
    facet_wrap(~compartment, scales = "free") +
    geom_path() +
    theme_bw()
  
}

```


```{r echo=FALSE, warning=FALSE, message=FALSE}
vietnam_data <- readxl::read_excel("../datafiles/vietnam_data.xlsx") %>% 
  janitor::clean_names() %>% 
  rownames_to_column(var = "n_year") %>% mutate(n_year = as.numeric(n_year))

# vietnam_data %>% 
#   ggplot(aes(x = n_year, y = buffalo_pop)) +
#   geom_point() +
#   theme_bw()
```



# Try parameters so outbreaks match what we see in Vietnam

These are the parameters that were working for Tan to sort of recreate the shape of his outbreaks:
```{r echo=FALSE}
n_years <- 23
vacc.pcts<- c(0.34, 0.24, 0.37, 0.44, 0.44, 0.64, 0.71, 0.69, 0.73, 
              0.72, 0.66, 0.60, 0.57, 0.27, 0.27, 0.16, 0.12, 0.12, 
              0.10, 0.08, 0.05, 0.05, 0.02)
```


```{r}
# For the disease dispersion
theta = 100
tau = 1
ggplot() + stat_function(fun = dgamma, args = list(shape = theta, rate = tau)) + scale_x_continuous(limits = c(0, 2*theta/tau))

# For vaccine effect over survival
beta_0 = -3.5
beta_1 = 7

# no seasonal forcing so, assuming the number of infections that a LIZ causes assuming no dispersion effort remains constant
b = 0.001
```

```{r echo=FALSE}
vax_smile6 <- smile_fx(b0 = NULL, b1 = NULL, period = NULL, theta = theta, tau = tau, years = n_years, 
                       beta_0 = beta_0, beta_1 = beta_1, vax = vacc.pcts, N1 = 20000, K = 50000,
                       b_fixed = b, rho_pop = 0.36, output_df = TRUE)
build_SMILE_plots(vax_smile6)
```

Using those parameters, this is what the underlying processes look like: 

```{r echo=FALSE}
infection_probability <- lambda.t(theta=theta, tau=tau, b=b, E = vax_smile6$E[-1])
nweeks <- 1:(n_years*52)

data.frame(week = nweeks, infection_probability = infection_probability) %>% 
  ggplot(aes(x = week, y = infection_probability)) +
  geom_line() +
  theme_bw() +
  labs(title = "Infection Probability", y = "lambda(t)") -> inf_prob_plot


data.frame(year = 1:n_years, vacc.pcts) %>% 
  ggplot(aes(x = year, y = vacc.pcts)) +
  geom_point() +
  geom_line() +
  theme_bw() +
  labs(title = "Vaccination Rate Data", x = "Year", y = "Vax rate") +
  scale_y_continuous(labels = scales::label_percent(), limits = c(0,1)) -> vax_rates_plot

survival_prob <- 1 / (1 + exp(-(beta_0 + beta_1 * vacc.pcts)))

vax_prcnt <- seq(0, 1, 0.001)
surv_prob <- (1 / (1 + exp(-(beta_0 + beta_1 * vax_prcnt))))


data.frame(vax_prcnt, surv_prob) %>% 
  ggplot(aes(x = vax_prcnt, y = surv_prob)) +
  geom_line() +
  theme_bw() +
  scale_x_continuous(labels = scales::label_percent(), breaks = seq(0, 1, 0.1)) +
  labs(x = "Vaccination rate", y = "Survival Probability") -> survival_curve_plot

# To visualize the dispersion effort, which follows a gamma distribution
# ggplot() +
#   stat_function(fun = dgamma, args = list(rate = theta, shape = tau)) +
#   lims(x = c(0, 1))

plot_grid(plot_grid(inf_prob_plot, vax_rates_plot, ncol = 2), survival_curve_plot, nrow = 2)

```


We are trying to see how our model can help us understand disease dynamics in this northern province of Vietnam. The context for these simulations then is based on the Vietnam case. 

# POSTER FIGURES 



## Seasonal forcing in transmission
The model has an underlying sinusoidal function to estimate the probability of infection, compared to the static value given in scenarios without seasonal forcing (red line).

```{r}
nyears <- 23 # Using this because of the 23 years of data for Vietnam
nweeks <- nyears*52
b <- b.season(b0 = -30,b1 = 0.85, period = 3*52, t = 1:nweeks + 1)
```

```{r echo=FALSE}
data.frame(week = 1:(23*52), b = b) %>% 
  ggplot(aes(x = week, y = b)) +
  geom_path() +
  geom_hline(yintercept = 0.001, color = "red") +
  theme_bw() +
  labs(y = "b - probability of transmission")
```


## Vaccination

This is the survival probability curve we are assuming when incorporating vaccines. The red line shows the static 88% survival rate used in the original paper (probability of bison surviving spore exposure and developing immunity $\zeta$). The survival probability function used is 

$$
\zeta(vax) = \frac{1}{1 + \exp^{-(\beta_0 + \beta_1 \cdot vax)}}
$$
We expect that every species will have a different survival probability curve, which can be adjusted through the parameters of $\beta_0$ and $\beta_1$

<!-- Could you understand the parameter beta_1 as the multiplicative effect of vaccination over survival probability? -->

```{r echo=FALSE}
my_beta_0 = -3.5; my_beta_1 = 10
vax_prcnt <- seq(0, 1, 0.001)
surv_prob <- (1 / (1 + exp(-(my_beta_0 + my_beta_1 * vax_prcnt))))

my_betas_0 <- seq(-10, 5, length.out = 5)

data.frame(vax_prcnt, betas_0 = rep(my_betas_0, each = length(vax_prcnt)), betas_1 = my_beta_1) %>% 
  mutate(surv_prob = (1 / (1 + exp(-(betas_0 + betas_1 * vax_prcnt))))) %>% 
  mutate(attr_betas = case_when(
    betas_0 == 0 ~ "zero",
    betas_0 > 0 ~ "pos",
    betas_0 < 0 ~ "neg"
  )) %>% 
  mutate(betas_0 = factor(betas_0)) %>%
  ggplot(aes(x = vax_prcnt, y = surv_prob, color = betas_0)) +
  geom_line(linewidth = 0.8) +
  geom_hline(yintercept = 0.88, color = "red", linewidth = 0.9) +
  theme_bw() +
  scale_x_continuous(labels = scales::label_percent(), breaks = seq(0, 1, 0.1)) +
  labs(x = "Vaccination rate", y = "Survival Probability", color = " ",
       title = paste("Survival probability curves under different values of beta_0"),
       subtitle = paste("Fixed beta_1 at", my_beta_1)) +
  scale_color_grey()
```

```{r echo=FALSE}
my_beta_0 = -3.5; my_beta_1 = 15
vax_prcnt <- seq(0, 1, 0.001)
surv_prob <- (1 / (1 + exp(-(my_beta_0 + my_beta_1 * vax_prcnt))))

my_betas_0 <- seq(-10, 5, length.out = 20)

data.frame(vax_prcnt, betas_0 = rep(my_betas_0, each = length(vax_prcnt)), betas_1 = my_beta_1) %>% 
  mutate(surv_prob = (1 / (1 + exp(-(betas_0 + betas_1 * vax_prcnt))))) %>% 
  mutate(attr_betas = case_when(
    betas_0 == 0 ~ "zero",
    betas_0 > 0 ~ "pos",
    betas_0 < 0 ~ "neg"
  )) %>% 
  # mutate(betas_0 = factor(betas_0)) %>%
  ggplot(aes(x = vax_prcnt, y = surv_prob, color = betas_0)) +
  geom_line(linewidth = 0.8) +
  geom_hline(yintercept = 0.88, color = "red", linewidth = 0.9) +
  theme_bw() +
  scale_x_continuous(labels = scales::label_percent(), breaks = seq(0, 1, 0.1)) +
  labs(x = "Vaccination rate", y = "Survival Probability", color = " ",
       title = paste("Survival probability curves under different values of beta_0"),
       subtitle = paste("Fixed beta_1 at", my_beta_1)) +
  scale_color_viridis_c(option = "A")
```


# Reproduction 

::: {.smaller}
Following the original paper, we set density dependent probability of reproduction based on the buffalo population in Vietnam with a 0.36 average reproduction rate, a 20,000 buffalo population, and a 50,000 carrying capacity:
:::

```{r}
N1 = 20000
K = 50000

rho_n(N=N1, K= K, rho = 0.36)

```

# Baseline scenarios 

The following scenarios look at the effects of incorporating seasonal forcing and vaccine on the outbreaks. Some of the baseline parameters:
- Assuming medium dispersion, where the mean dispersion effort is 1, with `theta=10` and `tau=10`

# Scenario 1 
## No vaccine and no seasonal transmission, but incorporates host dynamics  

```{r echo=FALSE}

get_beta0_novax <- function(target_zeta) {
  log(1/((1/target_zeta)-1))
}

novax_beta_0 = get_beta0_novax(0.8); beta_1 = 5; vax = 0

# check
# 1 / (1 + exp(-(beta_0 + beta_1 * vax)))
```

No vaccine here means we need to settle on a survival probability $\zeta$ that is constant, compared to a survival probability $\zeta$ dependent on vaccination rates

```{r echo=FALSE}

vax_prcnt <- seq(0, 1, 0.001)
my_beta_0 = -2.5; my_beta_1 = 10
surv_prob <- (1 / (1 + exp(-(my_beta_0 + my_beta_1 * vax_prcnt))))

surv_prob_novax <- (1 / (1 + exp(-(novax_beta_0 + beta_1 * 0))))


data.frame(vax_prcnt, surv_prob) %>% 
  ggplot(aes(x = vax_prcnt, y = surv_prob)) +
  geom_line(linewidth = 0.7) +
  geom_hline(yintercept = surv_prob_novax, color = "red", linewidth = 0.7) +
  theme_bw() +
  scale_x_continuous(labels = scales::label_percent(), breaks = seq(0, 1, 0.1)) +
    lims(y = c(0,1)) +
  labs(x = "Vaccination rate", y = "Survival Probability",
       title = "Survival probabilities for scenarios with and without vaccination",
       subtitle = paste("No Vax =", surv_prob_novax, "; Vax params: beta_0 =", my_beta_0, "beta_1 =", my_beta_1))

```



In this scenario, where we assume no seasonal forcing, the parameter $b$ is fixed and means the number of infections caused by 1 LIZ when there is no dispersion effort and no seasonality in transmission. For b, we will use the same one from the original paper `b=0.001`.
```{r}
vax_smile_tests <- smile_fx(theta = 10, tau = 10, years = 23,
                            # fixed survival probability and fixed b
                            zeta_novax = 0.8, b_fixed = 0.001,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)
```

```{r echo=FALSE}
vax_smile_tests %>% 
  build_SMILE_plots()
```

In this scenario we can see that outbreaks initially occur at the beginning of the simulation, and as the susceptible population decreases, so does the immune and infected categories. Outbreaks follow birth pulses at the beginning of the year, when the susceptible population increases. 

# Scenario 2
## with vaccine and no seasonal transmission 
In this case, we are using the vaccine data for the 23 years.

```{r}

vax_smile_tests <- smile_fx(theta = 10, tau = 10, years = 23,
                            # fixed b for no seasonality
                            b_fixed = 0.001,
                            # parameters for survival curve with varying vaccination levels
                            beta_0 = -2.5, beta_1 = 10, vax = vacc.pcts,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)
```

```{r echo=FALSE}
vax_smile_tests %>% 
  build_SMILE_plots()
```

Note that in this scenario, the survival probability is directly related to vaccination levels in that year. Initially, we observe a steep decline in the susceptible population, however, the susceptible population increases with birth pulses and an increased survival rate due to higher levels of vaccination. However, as vaccination rates decline, we observe a direct response in an increase in outbreaks.

# Scenario 3
## No vaccine and seasonal transmission 
Under 

```{r}

vax_smile_tests <- smile_fx(theta = 10, tau = 10, years = 23,
                            # fixed survival probability
                            zeta_novax = 0.8,
                            # Parameters to induce seasonal forcing in transmission
                            b0 = -30, b1 = 0.85, period = 3*52,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)

``` 

```{r echo=FALSE}
vax_smile_tests %>% 
  build_SMILE_plots()
```
With no vaccination in this scenario, outbreaks are a direct response to increases in the host population by births and the seasonality of transmission. 

# Scenario 4
## with vaccine and seasonal transmission 

```{r}

vax_smile_tests <- smile_fx(theta = 10, tau = 10, years = 23,
                            # Parameters to induce seasonal forcing in transmission
                            b0 = -30, b1 = 0.85, period = 3*52,
                            # parameters for survival curve with varying vaccination levels
                            beta_0 = -2.5, beta_1 = 10, vax = vacc.pcts,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)

```

```{r echo=FALSE}
vax_smile_tests %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  ggplot(aes(x = week, y = n)) +
  facet_wrap(~compartment, scales = "free") +
  geom_path() +
  theme_bw()


vax_smile_tests %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  filter(compartment %in% c("S", "L")) %>% 
  ggplot(aes(x = week, y = n, color = compartment, linetype = compartment)) +
  # facet_wrap(~compartment, scales = "free") +
  geom_line(linewidth = 0.7) +
  theme_bw() +
  scale_color_manual(values = c("red", "black")) +
  scale_linetype_manual(values = c("dashed", "solid")) +
  labs(title = "Deaths and Susceptibles in a Vax scenario with seasonal transmission")

```
When we incorporate seasonality in transmission and vaccination rates, we observe a direct decrease in deaths and environmental pathogen when vaccination levels are high. As vaccination rates decrease, infections and deaths increase significantly.

We can also look at the local R0 here over time and the force of infection since the b and E change over time.

```{r echo=FALSE}
nweeks <- 23*52
my_b <- b.season(b0 = -30, b1 = 0.85, period = 3*52,t= 0:nweeks)
my_E <- vax_smile_tests$E

local_R0 <- calc_local_R0(tau = 10, theta = 10, b = my_b, E = my_E)

data.frame(weeks = 0:nweeks, R0 = local_R0) %>% 
  ggplot(aes(x = weeks, y = R0)) +
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(title = "Local R0") -> local_R0_plot

my_theta <- 10
my_tau <- 10
seasonal_foi <- lambda.t(theta= 10, tau = 10, b = my_b, E = my_E)


data.frame(weeks = 0:nweeks, FOI = seasonal_foi) %>%
  ggplot(aes(x = weeks, y = FOI)) +
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(title = "Seasonal FOI", y = "lambda(t)") -> seasonal_foi_plot

plot_grid(local_R0_plot, seasonal_foi_plot, ncol = 2)

```


# Exploring

## Survival probability
Change the survival probability first. Assuming different species will have different survival probability curves, some might have high survival rates without vaccination, where a vaccine increases survival. Other species might have low survival rates, however vaccination will significantly increase their probabilities of survival. We also consider a scenario where despite vaccination, survival rates are still relatively low:


```{r echo=FALSE}

vax_prcnt <- seq(0, 1, 0.001)
my_beta_1 = 10
my_betas_0 <- c(-10, -3, 1.5)

data.frame(vax_prcnt, betas_0 = rep(my_betas_0, each = length(vax_prcnt)), betas_1 = my_beta_1) %>% 
  mutate(surv_prob = (1 / (1 + exp(-(betas_0 + betas_1 * vax_prcnt))))) %>% 
  mutate(attr_betas = case_when(
    betas_0 == 0 ~ "zero",
    betas_0 > 0 ~ "pos",
    betas_0 < 0 ~ "neg"
  )) %>% 
  mutate(betas_0 = factor(betas_0)) %>%
  ggplot(aes(x = vax_prcnt, y = surv_prob, color = betas_0)) +
  geom_line(linewidth = 0.8) +
  # geom_hline(yintercept = 0.88, color = "red", linewidth = 0.9) +
  theme_bw() +
  scale_x_continuous(labels = scales::label_percent(), breaks = seq(0, 1, 0.1)) +
  labs(x = "Vaccination rate", y = "Survival Probability", color = " ",
       title = paste("Survival probability curves under different values of beta_0"),
       subtitle = paste("Fixed beta_1 at", my_beta_1)) +
  scale_color_grey()
```

## Vaccination scenarios 

Constant vaccination at 30%, 50%, 75% of animals under the three different survival curves.

Variable vaccination following the Vietnam vaccine data.

## Seasonality in transmission 

Then, the seasonality of the outbreaks is not clear from the data, maybe some cases every 3-5 years, but none when vaccination was high, then again every 3ish years. The red line shows what we assume is the number of infections caused by 1 LIZ when $\frac{\tau}{\theta} = 0$ and there is no seasonality.

```{r eval=FALSE}
vietnam_data %>% 
  pivot_longer(-c(n_year, year, vaccine_coverage), names_to = "my_category") %>% 
  filter(!my_category %in% c("vaccine_doses", "human_cases", "total_animal_cases", "total_pop_in_risk_area")) %>% 
  tidyr::separate_wider_delim(., my_category, delim = "_", names = c("species", "case_pop")) %>% 
  ggplot(aes(x = year, y = value, color = species)) +
  facet_wrap(~case_pop, scales = "free") +
  geom_line() +
  theme_bw() +
  scale_x_continuous(n.breaks = 12) +
  theme(axis.text.x = element_text(angle = 90))

```


```{r}
nyears <- 23 # Using this because of the 23 years of data for Vietnam
nweeks <- nyears*52
my_b0 = -30
my_b1 = 0.85
my_b <- b.season(b0 = my_b0, b1 = my_b1, period = 4*52, t = 0:nweeks + 1)
```

```{r echo=FALSE}
data.frame(week = 0:(23*52), b = my_b) %>% 
  ggplot(aes(x = week, y = b)) +
  geom_path() +
  geom_hline(yintercept = 0.001, color = "red") +
  theme_bw() +
  scale_x_continuous(breaks = seq(0, nweeks, by=52), labels = 0:23) +
  labs(x = "Year") +
  labs(y = "b - probability of transmission")
```

# POSTER FIGURES 

## Survival curves 

```{r echo=FALSE}
my_beta_1 = 10
my_betas_0 = seq(-11, 5, length.out = 20)
sim_betas_0 <- c(-10, -3, 1.5)

vax_prcnt <- seq(0, 1, 0.001)

data.frame(vax_prcnt, betas_0 = rep(sim_betas_0, each = length(vax_prcnt)), betas_1 = my_beta_1) %>% 
  mutate(surv_prob = (1 / (1 + exp(-(betas_0 + betas_1 * vax_prcnt))))) -> sim_survival_curves

# png("research_day_figs/survival_curves.png", width = 12 , height = 8, units = "in", res = 300, type = "windows")
data.frame(vax_prcnt, betas_0 = rep(my_betas_0, each = length(vax_prcnt)), betas_1 = my_beta_1)  %>% 
  mutate(surv_prob = (1 / (1 + exp(-(betas_0 + betas_1 * vax_prcnt))))) %>% 
  ggplot(aes(x = vax_prcnt, y = surv_prob, color = betas_0, fill = betas_0)) +
  geom_line(linewidth = 0.8) +
  geom_path(data = sim_survival_curves, aes(x = vax_prcnt, y = surv_prob, group = betas_0), color = "grey", linewidth = 1.5) +
  # geom_hline(yintercept = 0.88, color = "red", linewidth = 0.9) +
  scale_color_viridis_c(option = "A") +
  scale_fill_viridis_c(option = "A") +
  theme_bw() +
  scale_x_continuous(labels = scales::label_percent(), breaks = seq(0, 1, 0.1)) +
  labs(x = "Vaccination rate", y = "Survival Probability", color = expression(beta[0]),
       title = expression("Survival probability curves with fixed"~beta[1]~"=10"))
# dev.off()
  
# For some reason, this code doesn't work. It will save the figure with some grey weirdness on top
# ggsave("research_day_figs/survival_curves.png", dpi = 300, width = 9, height = 5, bg = "white")


```
# Individual curves 

```{r echo=FALSE}
surv_palette <- viridisLite::viridis(12, option = "A")
surv_3_cols <- surv_palette[c(2,6,9)]
# scales::show_col(surv_3_cols)

# png("research_day_figs/3survival_curves.png", width = 13 , height = 8, units = "in", res = 300, type = "windows")
data.frame(vax_prcnt, betas_0 = rep(sim_betas_0, each = length(vax_prcnt)), betas_1 = my_beta_1) %>% 
  mutate(surv_prob = (1 / (1 + exp(-(betas_0 + betas_1 * vax_prcnt))))) %>% 
  mutate(betas_0 = factor(betas_0)) -> my_vax_curves

my_vax_curves %>% 
  ggplot(aes(x = vax_prcnt, y = surv_prob, color = betas_0)) +
  geom_line(linewidth = 1) +
  # geom_hline(yintercept = 0.88, color = "red", linewidth = 0.9) +
  theme_bw() +
  scale_x_continuous(labels = scales::label_percent(), breaks = seq(0, 1, 0.1)) +
 labs(x = "Vaccination rate", y = "Survival Probability", color = expression(beta[0]),
       title = expression("Survival probability curves with fixed"~beta[1]~"=10")) +
  scale_color_manual(values = surv_3_cols)

# dev.off()
```


# No VAX SCENARIOS 

```{r}
# epi poster scenario defaults
my_tau <- 1
my_theta <- 100

low_surv <- my_vax_curves %>% filter(betas_0 == -10 & vax_prcnt == 0) %>%  pull(surv_prob)
med_surv <- my_vax_curves %>% filter(betas_0 == -3 & vax_prcnt == 0) %>%  pull(surv_prob)
high_surv <- my_vax_curves %>% filter(betas_0 == 1.5 & vax_prcnt == 0) %>%  pull(surv_prob)
```

## LOW SURVIVAL 
```{r fig.width=10, fig.height=5}
novax_noseason <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # fixed survival probability and fixed b
                            zeta_novax = low_surv, b_fixed = 0.001,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)

# novax_noseason %>% build_SMILE_plots()

novax_yesseason <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # fixed survival probability
                            zeta_novax = low_surv,
                            # Parameters to induce seasonal forcing in transmission
                            b0 = -30, b1 = 0.85, period = 3*52,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)
# novax_yesseason %>% build_SMILE_plots()

novax_noseason %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  mutate(seasonality = "no") -> long_novax_noseason

novax_yesseason %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  mutate(seasonality = "yes") -> long_novax_yesseason

bind_rows(long_novax_noseason, long_novax_yesseason) %>% 
  filter(compartment %in% c("S", "M", "L")) %>%
  mutate(cat = case_when(
    compartment == "S" ~ "S - Susceptible",
    compartment == "M" ~ "M - Immune",
    compartment == "L" ~ "L - Local Infectious Zone"
  )) %>% 
  mutate(cat = factor(cat, levels = c("S - Susceptible", "M - Immune", "L - Local Infectious Zone"))) %>% 
  ggplot(aes(x = week, y = n, color = seasonality)) +
  facet_wrap(~cat, scales = "free") +
  geom_line(linewidth = 0.8) +
  theme_bw() +
  scale_color_manual(values = c("#E95562FF", "#120D32FF")) +
  # scale_linetype_manual(values = c("dashed", "solid")) +
  labs(title = "No vaccination, low survival", 
       y = "Number of individuals")
ggsave("research_day_figs/novax_low_SML.png")

```

## MED SURVIVAL 
```{r fig.width=10, fig.height=5}
novax_noseason <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # fixed survival probability and fixed b
                            zeta_novax = med_surv, b_fixed = 0.001,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)

# novax_noseason %>% build_SMILE_plots()

novax_yesseason <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # fixed survival probability
                            zeta_novax = med_surv,
                            # Parameters to induce seasonal forcing in transmission
                            b0 = -30, b1 = 0.85, period = 3*52,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)
# novax_yesseason %>% build_SMILE_plots()

novax_noseason %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  mutate(seasonality = "no") -> long_novax_noseason

novax_yesseason %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  mutate(seasonality = "yes") -> long_novax_yesseason

bind_rows(long_novax_noseason, long_novax_yesseason) %>% 
  filter(compartment %in% c("S", "M", "L")) %>%
  mutate(cat = case_when(
    compartment == "S" ~ "S - Susceptible",
    compartment == "M" ~ "M - Immune",
    compartment == "L" ~ "L - Local Infectious Zone"
  )) %>% 
  mutate(cat = factor(cat, levels = c("S - Susceptible", "M - Immune", "L - Local Infectious Zone"))) %>% 
  ggplot(aes(x = week, y = n, color = seasonality)) +
  facet_wrap(~cat, scales = "free") +
  geom_line(linewidth = 0.8) +
  theme_bw() +
  scale_color_manual(values = c("#E95562FF", "#120D32FF")) +
  # scale_linetype_manual(values = c("dashed", "solid")) +
  labs(title = "No vaccination, medium survival", 
       y = "Number of individuals")
ggsave("research_day_figs/novax_med_SML.png")

```


## HIGH SURVIVAL 
```{r fig.width=10, fig.height=5}
novax_noseason <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # fixed survival probability and fixed b
                            zeta_novax = high_surv, b_fixed = 0.001,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)

# novax_noseason %>% build_SMILE_plots()

novax_yesseason <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # fixed survival probability
                            zeta_novax = high_surv,
                            # Parameters to induce seasonal forcing in transmission
                            b0 = -30, b1 = 0.85, period = 3*52,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)
# novax_yesseason %>% build_SMILE_plots()

novax_noseason %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  mutate(seasonality = "no") -> long_novax_noseason

novax_yesseason %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  mutate(seasonality = "yes") -> long_novax_yesseason

bind_rows(long_novax_noseason, long_novax_yesseason) %>% 
  filter(compartment %in% c("S", "M", "L")) %>%
  mutate(cat = case_when(
    compartment == "S" ~ "S - Susceptible",
    compartment == "M" ~ "M - Immune",
    compartment == "L" ~ "L - Local Infectious Zone"
  )) %>% 
  mutate(cat = factor(cat, levels = c("S - Susceptible", "M - Immune", "L - Local Infectious Zone"))) %>% 
  ggplot(aes(x = week, y = n, color = seasonality)) +
  facet_wrap(~cat, scales = "free") +
  geom_line(linewidth = 0.8) +
  theme_bw() +
  scale_color_manual(values = c("#E95562FF", "#120D32FF")) +
  # scale_linetype_manual(values = c("dashed", "solid")) +
  labs(title = "No vaccination, high survival", 
       y = "Number of individuals")
ggsave("research_day_figs/novax_high_SML.png")

```


# Survival probability for each year given vaccination data 

```{r echo=FALSE}
surv_palette <- viridisLite::viridis(12, option = "A")
surv_3_cols <- surv_palette[c(2,6,9)]
# scales::show_col(surv_3_cols)
vax_rates = rep(vacc.pcts, each=52)

# png("research_day_figs/3survival_curves_w_vax.png", width = 13 , height = 8, units = "in", res = 300, type = "windows")


data.frame(n_weeks = 1:(23*52), vax_rates = rep(vacc.pcts, each=52), betas_0 = rep(sim_betas_0, each = length(vax_rates)), betas_1 = my_beta_1) %>% 
  mutate(zeta = (1 / (1 + exp(-(betas_0 + betas_1 * vax_rates))))) %>% 
  mutate(betas_0 = factor(betas_0)) %>%
  ggplot(aes(x = n_weeks, y = zeta, color = betas_0)) +
  geom_line(linewidth = 2) +
  # geom_hline(yintercept = 0.88, color = "red", linewidth = 0.9) +
  theme_bw() +
  # scale_x_continuous(labels = scales::label_percent(), breaks = seq(0, 1, 0.1)) +
 labs(x = "Week", y = expression(zeta), color = expression(beta[0]),
       # title = expression("Survival probability given vaccination data under three different survival curves")
      ) +
  scale_color_manual(values = surv_3_cols)

ggsave("research_day_figs/3survival_curves_w_vax.png")

# dev.off()

```

```{r}
# scales::show_col(viridisLite::viridis(3, begin = 0.5, end = 0.8, option = "A"))

vietnam_data %>% 
  select(year, buffalo_cases, cattle_cases, horse_cases, total_animal_cases) %>% 
  mutate(year = factor(year, levels = 1991:2013)) %>%
  pivot_longer(-c(year, total_animal_cases), names_to = "species", values_to = "cases") %>% 
  mutate(species = str_remove(species, "_cases")) -> case_data

vietnam_data %>% 
  select(year, vaccine_coverage) %>% 
  mutate(year = factor(year, levels = 1991:2013)) -> vax_data 

case_data %>% 
  ggplot(aes(x = year, y = cases/10)) +
  geom_col(data = vax_data, aes(x = year, y = vaccine_coverage), width = 0.5, color = "lightgrey", fill = "lightgrey") +
  geom_text(data = vax_data, aes(x = year, y = vaccine_coverage, label = paste0(round(vaccine_coverage, 2)*100, "%")), vjust = -0.5, size = 2.5) +
  geom_path(aes(color = species, group = species, linetype = species), linewidth = 1.2, alpha = 0.8) +
  theme_bw() +
  labs(y = "Vaccine coverage") +
  scale_y_continuous(label = scales::label_percent(), limits = c(0, 1), sec.axis = sec_axis(~ . * 10, name = "Number of cases", breaks = 0:10)) + 
  scale_linetype_manual(values = c("solid", "longdash", "twodash")) +
  # scale_color_manual(values = c("#120D32FF", "#331068FF", "#7D2482FF")) +
  scale_color_manual(values = viridisLite::viridis(3, begin = 0.5, end = 0.8, option = "A")) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5),
        legend.position = c(0.9, 0.85), 
        legend.background = element_rect(color = "grey"),
        legend.title = element_blank())


ggsave("research_day_figs/vax_data_cases.png",width = 9, height = 4.5)
```


# VAX SCENARIOS 

```{r echo=FALSE}

build_SL_plot <- function(smile_output) {
  smile_output %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  filter(compartment %in% c("S", "L")) %>% 
  ggplot(aes(x = week, y = n, color = compartment, linetype = compartment)) +
  # facet_wrap(~compartment, scales = "free") +
  geom_line(linewidth = 0.7) +
  theme_bw() +
  scale_color_manual(values = c("red", "black")) +
  scale_linetype_manual(values = c("dashed", "solid"))
}

```

```{r}
nweeks <- 23*52
my_b_season <- b.season(b0 = -30, b1 = 0.85, period = 3*52,t= 0:nweeks)
my_b_fixed <- 0.001
```


## LOW SURVIVAL 


```{r}

vax_noseason_low_surv <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # fixed b for no seasonality
                            b_fixed = my_b_fixed,
                            # parameters for survival curve with varying vaccination levels
                            beta_0 = -10, beta_1 = 10, vax = vacc.pcts,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)
vax_noseason_low_surv %>% build_SMILE_plots()
vax_noseason_low_surv %>% build_SL_plot()

vax_season_low_surv <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # Parameters to induce seasonal forcing in transmission
                            b0 = -30, b1 = 0.85, period = 3*52,
                            # parameters for survival curve with varying vaccination levels
                            beta_0 = -10, beta_1 = 10, vax = vacc.pcts,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)
vax_season_low_surv %>% build_SMILE_plots()
vax_season_low_surv %>% build_SL_plot()
```

## MED SURVIVAL

```{r}


vax_noseason_med_surv <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # fixed b for no seasonality
                            b_fixed = my_b_fixed,
                            # parameters for survival curve with varying vaccination levels
                            beta_0 = -3, beta_1 = 10, vax = vacc.pcts,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)
vax_noseason_med_surv %>% build_SMILE_plots()
vax_noseason_med_surv %>% build_SL_plot()

vax_season_med_surv <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # Parameters to induce seasonal forcing in transmission
                            b0 = -30, b1 = 0.85, period = 3*52,
                            # parameters for survival curve with varying vaccination levels
                            beta_0 = -3, beta_1 = 10, vax = vacc.pcts,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)
vax_season_med_surv %>% build_SMILE_plots()
vax_season_med_surv %>% build_SL_plot()
```

```{r}

vax_noseason_high_surv <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # fixed b for no seasonality
                            b_fixed = my_b_fixed,
                            # parameters for survival curve with varying vaccination levels
                            beta_0 = 1.5, beta_1 = 10, vax = vacc.pcts,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)
vax_noseason_high_surv %>% build_SMILE_plots()
vax_noseason_high_surv %>% build_SL_plot()

vax_season_high_surv <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                            # Parameters to induce seasonal forcing in transmission
                            b0 = -30, b1 = 0.85, period = 3*52,
                            # parameters for survival curve with varying vaccination levels
                            beta_0 = 1.5, beta_1 = 10, vax = vacc.pcts,
                            # parameters for host population dynamics include births and deaths
                            N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                            output_df = TRUE)
vax_season_high_surv%>% build_SMILE_plots()
vax_season_high_surv%>% build_SL_plot()
```

```{r}

# make long format:

make_smile_long <- function(smile_df) {
  smile_df %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z")))
}

bind_rows(vax_noseason_low_surv %>% make_smile_long() %>% mutate(seasonality = "no", survival = "low"),
          vax_noseason_med_surv %>% make_smile_long() %>% mutate(seasonality = "no", survival = "med"),
          vax_noseason_high_surv %>% make_smile_long() %>% mutate(seasonality = "no", survival = "high"),
          vax_season_low_surv %>% make_smile_long() %>% mutate(seasonality = "yes", survival = "low"),
          vax_season_med_surv %>% make_smile_long() %>% mutate(seasonality = "yes", survival = "med"),
          vax_season_high_surv %>% make_smile_long() %>% mutate(seasonality = "yes", survival = "high")) -> big_df


bind_rows(vax_noseason_low_surv %>% mutate(seasonality = "no", survival = "low") %>%
            mutate(R0 = calc_local_R0(tau = my_tau, theta = my_theta, b = my_b_fixed, E = E)),
          vax_noseason_med_surv %>% mutate(seasonality = "no", survival = "med") %>% 
            mutate(R0 = calc_local_R0(tau = my_tau, theta = my_theta, b = my_b_fixed, E = E)),
          vax_noseason_high_surv %>% mutate(seasonality = "no", survival = "high") %>% 
            mutate(R0 = calc_local_R0(tau = my_tau, theta = my_theta, b = my_b_fixed, E = E)),
          vax_season_low_surv %>% mutate(seasonality = "yes", survival = "low") %>% 
            mutate(R0 = calc_local_R0(tau = my_tau, theta = my_theta, b = my_b_season, E = E)),
          vax_season_med_surv %>% mutate(seasonality = "yes", survival = "med") %>% 
            mutate(R0 = calc_local_R0(tau = my_tau, theta = my_theta, b = my_b_season, E = E)),
          vax_season_high_surv %>% mutate(seasonality = "yes", survival = "high") %>% 
            mutate(R0 = calc_local_R0(tau = my_tau, theta = my_theta, b = my_b_season, E = E))) -> big_df_R0


```


# FIGS for VAX 

```{r fig.width=10, fig.height=5}
# LOW SURV
big_df %>% 
  filter(survival == "low") %>% 
  filter(compartment %in% c("S", "M", "L")) %>%
  mutate(cat = case_when(
    compartment == "S" ~ "S - Susceptible",
    compartment == "M" ~ "M - Immune",
    compartment == "L" ~ "L - Local Infectious Zone"
  )) %>% 
  mutate(cat = factor(cat, levels = c("S - Susceptible", "M - Immune", "L - Local Infectious Zone"))) %>% 
  ggplot(aes(x = week, y = n, color = seasonality)) +
  facet_wrap(~cat, scales = "free") +
  geom_line(linewidth = 0.8) +
  theme_bw() +
  scale_color_manual(values = c("#E95562FF", "#120D32FF")) +
  # scale_linetype_manual(values = c("dashed", "solid")) +
  labs(title = "Vaccination, low survival", 
       y = "Number of individuals")
ggsave("research_day_figs/vax_low_SML.png")

```

```{r fig.width=10, fig.height=5}
# MED SURV
big_df %>% 
  filter(survival == "med") %>% 
  filter(compartment %in% c("S", "M", "L")) %>%
  mutate(cat = case_when(
    compartment == "S" ~ "S - Susceptible",
    compartment == "M" ~ "M - Immune",
    compartment == "L" ~ "L - Local Infectious Zone"
  )) %>% 
  mutate(cat = factor(cat, levels = c("S - Susceptible", "M - Immune", "L - Local Infectious Zone"))) %>% 
  ggplot(aes(x = week, y = n, color = seasonality)) +
  facet_wrap(~cat, scales = "free") +
  geom_line(linewidth = 0.8) +
  theme_bw() +
  scale_color_manual(values = c("#E95562FF", "#120D32FF")) +
  # scale_linetype_manual(values = c("dashed", "solid")) +
  labs(title = "Vaccination, med survival", 
       y = "Number of individuals")
ggsave("research_day_figs/vax_med_SML.png")

```

```{r fig.width=10, fig.height=5}
# HIGH SURV
big_df %>% 
  filter(survival == "high") %>% 
  filter(compartment %in% c("S", "M", "L")) %>%
  mutate(cat = case_when(
    compartment == "S" ~ "S - Susceptible",
    compartment == "M" ~ "M - Immune",
    compartment == "L" ~ "L - Local Infectious Zone"
  )) %>% 
  mutate(cat = factor(cat, levels = c("S - Susceptible", "M - Immune", "L - Local Infectious Zone"))) %>% 
  ggplot(aes(x = week, y = n, color = seasonality)) +
  facet_wrap(~cat, scales = "free") +
  geom_line(linewidth = 0.8) +
  theme_bw() +
  scale_color_manual(values = c("#E95562FF", "#120D32FF")) +
  # scale_linetype_manual(values = c("dashed", "solid")) +
  labs(title = "Vaccination, high survival", 
       y = "Number of individuals")
ggsave("research_day_figs/vax_high_SML.png")

```



```{r fig.width=10, fig.height=5}
big_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>% 
  filter(compartment %in% c("S", "M", "L")) %>% 
  filter(seasonality == "no") %>% 
    mutate(cat = case_when(
    compartment == "S" ~ "S - Susceptible",
    compartment == "M" ~ "M - Immune",
    compartment == "L" ~ "L - Local Infectious Zone"
  )) %>%
  mutate(cat = factor(cat, levels = c("S - Susceptible", "M - Immune", "L - Local Infectious Zone"))) %>% 
  ggplot(aes(x = week, y = n, color = survival)) +
  facet_wrap(~cat, scales = "free") +
  geom_line(linewidth = 0.8, alpha = 0.8) +
  theme_bw() +
  # scale_color_manual(values = c("#E95562FF", "#120D32FF")) +
  # scale_linetype_manual(values = c("dashed", "solid")) +
  labs(y = "Number of individuals", title = "No seasonal forcing") +
  scale_color_manual(values = surv_3_cols)

ggsave("research_day_figs/vax_noseason_SL.png")

big_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>% 
  filter(compartment %in% c("S", "M", "L")) %>% 
  filter(seasonality == "yes") %>% 
    mutate(cat = case_when(
    compartment == "S" ~ "S - Susceptible",
    compartment == "M" ~ "M - Immune",
    compartment == "L" ~ "L - Local Infectious Zone"
  )) %>%
  mutate(cat = factor(cat, levels = c("S - Susceptible", "M - Immune", "L - Local Infectious Zone"))) %>% 
  ggplot(aes(x = week, y = n, color = survival)) +
  facet_wrap(~cat, scales = "free") +
  geom_line(linewidth = 0.8, alpha = 0.8) +
  theme_bw() +
  # scale_color_manual(values = c("#E95562FF", "#120D32FF")) +
  # scale_linetype_manual(values = c("dashed", "solid")) +
  labs(y = "Number of individuals", title = "With seasonal forcing") +
  scale_color_manual(values = surv_3_cols)

ggsave("research_day_figs/vax_season_SL.png")
```

```{r fig.width=10, fig.height=4}
big_df_R0 %>% 
  filter(seasonality == "no") %>% 
  # pivot_wider(names_from = compartment, values_from = n) %>% 
  # mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>% 
  # select(week, seasonality, survival, E) %>% 
  # mutate(R0 = calc_local_R0(tau = my_tau, theta = my_theta, b = my_b_fixed, E = E)) %>% 
  ggplot(aes(x = week, y = R0, color = survival)) +
  # geom_point() +
  geom_line(linewidth = 1) +
  theme_bw() +
  labs(title = "Local R0 - no seasonality") +
  scale_color_manual(values = surv_3_cols)

ggsave("research_day_figs/vax_noseason_R0.png")

big_df_R0 %>% 
  filter(seasonality == "yes") %>% 
  # pivot_wider(names_from = compartment, values_from = n) %>% 
  # mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>% 
  # select(week, seasonality, survival, E) %>% 
  # mutate(R0 = calc_local_R0(tau = my_tau, theta = my_theta, b = my_b_fixed, E = E)) %>% 
  ggplot(aes(x = week, y = R0, color = survival)) +
  # geom_point() +
  geom_line(linewidth = 1) +
  theme_bw() +
  labs(title = "Local R0 - seasonal forcing") +
  scale_color_manual(values = surv_3_cols)

ggsave("research_day_figs/vax_season_R0.png")
```

```{r fig.width=10, fig.height=6}
big_df_R0 %>% 
  mutate(season = case_when(
    seasonality == "no" ~ "No seasonal transmission",
    seasonality == "yes"~ "Seasonal forcing"
  )) %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  ggplot(aes(x = week, y = R0, color = survival)) +
  facet_wrap(~season, ncol = 1, scales = "free") +
  geom_line(linewidth = 1) +
  theme_bw() +
  scale_color_manual(values = surv_3_cols) +
  theme(legend.position = "bottom")

ggsave("research_day_figs/vax_R0.png")

```


```{r}
big_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  filter(compartment %in% c("S", "L")) %>% 
  ggplot(aes(x = week, y = n, color = compartment, linetype = compartment)) +
  facet_wrap(seasonality~survival, scales = "free") +
  geom_path(linewidth = 0.7) +
  theme_bw() +
  scale_color_manual(values = c("red", "black")) +
  scale_linetype_manual(values = c("dashed", "solid"))
```

# LOCAL R0

```{r}


my_E <- vax_smile_tests$E

local_R0 <- calc_local_R0(tau = 10, theta = 10, b = my_b, E = my_E)

data.frame(weeks = 0:nweeks, R0 = local_R0) %>% 
  ggplot(aes(x = weeks, y = R0)) +
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(title = "Local R0") -> local_R0_plot
```

# STOCHASTIC SIMULATIONS 

```{r echo=FALSE}

n_stoch_sims <- 100
# NO SEASONAL FORCING
vax_noseason_low_surv_stoch	<-	NULL
for(i in 1:n_stoch_sims){
  my_stoch_sim <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                           # fixed b for no seasonality
                           b_fixed = my_b_fixed,
                           # parameters for survival curve with varying vaccination levels
                           beta_0 = -10, beta_1 = 10, vax = vacc.pcts,
                           # parameters for host population dynamics include births and deaths
                           N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                           output_df = TRUE, stochastic = TRUE) %>% mutate(sim = paste0("sim", i))
  vax_noseason_low_surv_stoch <- bind_rows(vax_noseason_low_surv_stoch, my_stoch_sim)
  
}


vax_noseason_med_surv_stoch <- NULL
for(i in 1:n_stoch_sims){
  my_stoch_sim <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                           # fixed b for no seasonality
                           b_fixed = my_b_fixed,
                           # parameters for survival curve with varying vaccination levels
                           beta_0 = -3, beta_1 = 10, vax = vacc.pcts,
                           # parameters for host population dynamics include births and deaths
                           N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                           output_df = TRUE, stochastic = TRUE) %>% mutate(sim = paste0("sim", i))
  vax_noseason_med_surv_stoch <- bind_rows(vax_noseason_med_surv_stoch, my_stoch_sim)
  
}

vax_noseason_high_surv_stoch <- NULL
for(i in 1:n_stoch_sims){
  my_stoch_sim <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                                 # fixed b for no seasonality
                                b_fixed = my_b_fixed,
                                # parameters for survival curve with varying vaccination levels
                                beta_0 = 1.5, beta_1 = 10, vax = vacc.pcts,
                                # parameters for host population dynamics include births and deaths
                                N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                                output_df = TRUE, stochastic = TRUE) %>% mutate(sim = paste0("sim", i))
  vax_noseason_high_surv_stoch <- bind_rows(vax_noseason_high_surv_stoch, my_stoch_sim)
                           
}

# SEASONAL 

vax_season_low_surv_stoch <- NULL
for(i in 1:n_stoch_sims){
  my_stoch_sim <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                           # Parameters to induce seasonal forcing in transmission
                           b0 = -30, b1 = 0.85, period = 3*52,
                           # parameters for survival curve with varying vaccination levels
                           beta_0 = -10, beta_1 = 10, vax = vacc.pcts,
                           # parameters for host population dynamics include births and deaths
                           N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                           output_df = TRUE, stochastic = TRUE) %>% mutate(sim = paste0("sim", i))
  vax_season_low_surv_stoch <- bind_rows(vax_season_low_surv_stoch, my_stoch_sim)
  
}

vax_season_med_surv_stoch <- NULL
for(i in 1:n_stoch_sims){
  my_stoch_sim <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                           # Parameters to induce seasonal forcing in transmission
                           b0 = -30, b1 = 0.85, period = 3*52,
                           # parameters for survival curve with varying vaccination levels
                           beta_0 = -3, beta_1 = 10, vax = vacc.pcts,
                           # parameters for host population dynamics include births and deaths
                           N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                           output_df = TRUE, stochastic = TRUE) %>% mutate(sim = paste0("sim", i))
  vax_season_med_surv_stoch <- bind_rows(vax_season_med_surv_stoch, my_stoch_sim)
  
}


vax_season_high_surv_stoch <- NULL
for(i in 1:n_stoch_sims){
  my_stoch_sim <- smile_fx(theta = my_theta, tau = my_tau, years = 23,
                           # Parameters to induce seasonal forcing in transmission
                           b0 = -30, b1 = 0.85, period = 3*52,
                           # parameters for survival curve with varying vaccination levels
                           beta_0 = 1.5, beta_1 = 10, vax = vacc.pcts,
                           # parameters for host population dynamics include births and deaths
                           N1 = 20000, K = 50000, rho_pop = 0.36, sigmaa = 0.92^(1/52),
                           output_df = TRUE, stochastic = TRUE) %>% mutate(sim = paste0("sim", i))
  vax_season_high_surv_stoch <- bind_rows(vax_season_high_surv_stoch, my_stoch_sim)
  
}


bind_rows(vax_noseason_low_surv_stoch %>% mutate(seasonality = "no", survival = "low"),
          vax_noseason_med_surv_stoch %>% mutate(seasonality = "no", survival = "med"),
          vax_noseason_high_surv_stoch %>% mutate(seasonality = "no", survival = "high"),
          vax_season_low_surv_stoch %>%  mutate(seasonality = "yes", survival = "low"),
          vax_season_med_surv_stoch %>% mutate(seasonality = "yes", survival = "med"),
          vax_season_high_surv_stoch %>% mutate(seasonality = "yes", survival = "high")) -> big_stoch_df
```


```{r}
big_stoch_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>% 
  # filter(compartment %in% c("S", "L")) %>%
  filter(seasonality == "no") %>% 
  select(week, S, L, survival, sim) %>% 
  pivot_longer(-c(week, survival, sim)) %>% 
  ggplot(aes(x = week, y = value, color = survival, group = sim)) +
  facet_wrap(~name, scales = "free") +
  geom_path(linewidth = 0.8, alpha = 0.8) +
  theme_bw() +
  # scale_color_manual(values = c("#E95562FF", "#120D32FF")) +
  # scale_linetype_manual(values = c("dashed", "solid")) +
  labs(y = "Number of individuals", title = "No seasonal forcing") +
  scale_color_manual(values = surv_3_cols)

ggsave("research_day_figs/vax_noseason_SL.png")

big_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>% 
  filter(seasonality == "yes") %>% 
  filter(compartment %in% c("S", "L")) %>% 
  ggplot(aes(x = week, y = n, color = survival)) +
  facet_wrap(~compartment, scales = "free") +
  geom_line(linewidth = 0.8, alpha = 0.8) +
  theme_bw() +
  # scale_color_manual(values = c("#E95562FF", "#120D32FF")) +
  # scale_linetype_manual(values = c("dashed", "solid")) +
  labs(y = "Number of individuals", title = "With seasonal forcing") +
  scale_color_manual(values = surv_3_cols)

ggsave("research_day_figs/vax_season_SL.png")
```

```{r fig.width=10, fig.height=5}
big_stoch_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  filter(seasonality == "yes") %>%
  ggplot(aes(x = week, y = L, group = sim, color = survival)) +
  facet_wrap(~survival, scales = "free", ncol = 3) +
  geom_path() +
  theme_bw() +
  scale_color_manual(values = surv_3_cols) +
  labs(title = "Seasonal Forcing", y = "Number of LIZ") +
  theme(legend.position = "none") -> season_LIZ_stoch_plots

big_stoch_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  filter(seasonality == "no") %>%
  ggplot(aes(x = week, y = L, group = sim, color = survival)) +
  facet_wrap(~survival, scales = "free", ncol = 3) +
  geom_path() +
  theme_bw() +
  scale_color_manual(values = surv_3_cols) +
  labs(title = "No Seasonality", y = "Number of LIZ") +
  theme(legend.position = "none") -> noseason_LIZ_stoch_plots

plot_grid(season_LIZ_stoch_plots, noseason_LIZ_stoch_plots, nrow = 2)

ggsave("research_day_figs/stoch_liz_facets.png")
```

```{r fig.width=10, fig.height=5}
big_stoch_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  filter(seasonality == "yes") %>%
  ggplot(aes(x = week, y = S, group = sim, color = survival)) +
  facet_wrap(~survival, scales = "free", ncol = 3) +
  geom_path() +
  theme_bw() +
  scale_color_manual(values = surv_3_cols) +
  labs(title = "Seasonal Forcing") +
  theme(legend.position = "none") -> season_LIZ_stoch_plots

big_stoch_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  filter(seasonality == "no") %>%
  ggplot(aes(x = week, y = S, group = sim, color = survival)) +
  facet_wrap(~survival, scales = "free", ncol = 3) +
  geom_path() +
  theme_bw() +
  scale_color_manual(values = surv_3_cols) +
  labs(title = "No Seasonality") +
  theme(legend.position = "none") -> noseason_LIZ_stoch_plots

plot_grid(season_LIZ_stoch_plots, noseason_LIZ_stoch_plots, nrow = 2)

ggsave("research_day_figs/stoch_S_facets.png")
```

```{r fig.width=10, fig.height=5}
big_stoch_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  filter(seasonality == "yes") %>%
  ggplot(aes(x = week, y = M, group = sim, color = survival)) +
  facet_wrap(~survival, scales = "free", ncol = 3) +
  geom_path() +
  theme_bw() +
  scale_color_manual(values = surv_3_cols) +
  labs(title = "Seasonal Forcing") +
  theme(legend.position = "none") -> season_LIZ_stoch_plots

big_stoch_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  filter(seasonality == "no") %>%
  ggplot(aes(x = week, y = M, group = sim, color = survival)) +
  facet_wrap(~survival, scales = "free", ncol = 3) +
  geom_path() +
  theme_bw() +
  scale_color_manual(values = surv_3_cols) +
  labs(title = "No Seasonality") +
  theme(legend.position = "none") -> noseason_LIZ_stoch_plots

plot_grid(season_LIZ_stoch_plots, noseason_LIZ_stoch_plots, nrow = 2)

ggsave("research_day_figs/stoch_M_facets.png")
```

```{r fig.width=10, fig.height=5}
big_stoch_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  filter(seasonality == "yes") %>%
  ggplot(aes(x = week, y = I, group = sim, color = survival)) +
  facet_wrap(~survival, scales = "free", ncol = 3) +
  geom_path() +
  theme_bw() +
  scale_color_manual(values = surv_3_cols) +
  labs(title = "Seasonal Forcing") +
  theme(legend.position = "none") -> season_LIZ_stoch_plots

big_stoch_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  filter(seasonality == "no") %>%
  ggplot(aes(x = week, y = I, group = sim, color = survival)) +
  facet_wrap(~survival, scales = "free", ncol = 3) +
  geom_path() +
  theme_bw() +
  scale_color_manual(values = surv_3_cols) +
  labs(title = "No Seasonality") +
  theme(legend.position = "none") -> noseason_LIZ_stoch_plots

plot_grid(season_LIZ_stoch_plots, noseason_LIZ_stoch_plots, nrow = 2)

ggsave("research_day_figs/stoch_I_facets.png")
```

```{r fig.width=10, fig.height=5}
big_stoch_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  filter(seasonality == "yes") %>%
  ggplot(aes(x = week, y = E, group = sim, color = survival)) +
  facet_wrap(~survival, scales = "free", ncol = 3) +
  geom_path() +
  theme_bw() +
  scale_color_manual(values = surv_3_cols) +
  labs(title = "Seasonal Forcing") +
  theme(legend.position = "none") -> season_LIZ_stoch_plots

big_stoch_df %>% 
  mutate(survival = factor(survival, levels = c("low", "med", "high"))) %>%
  filter(seasonality == "no") %>%
  ggplot(aes(x = week, y = E, group = sim, color = survival)) +
  facet_wrap(~survival, scales = "free", ncol = 3) +
  geom_path() +
  theme_bw() +
  scale_color_manual(values = surv_3_cols) +
  labs(title = "No Seasonality") +
  theme(legend.position = "none") -> noseason_LIZ_stoch_plots

plot_grid(season_LIZ_stoch_plots, noseason_LIZ_stoch_plots, nrow = 2)

ggsave("research_day_figs/stoch_E_facets.png")
```

# ARCHIVED 

# Scenario 1 
no vaccine and no seasonal transmission 

```{r}
vax_smile_tests <- smile_fx(b0 = NULL, b1 = NULL, period = NULL, theta = 100, tau = 1, years = 23, 
                       beta_0 = -3.5, beta_1 = 6.86, vax = rep(0, 23), N1 = 20000, K = 50000, b_fixed = 0.001, output_df = TRUE)
vax_smile_tests %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  ggplot(aes(x = week, y = n)) +
  facet_wrap(~compartment, scales = "free") +
  geom_path() +
  theme_bw()
```

# Scenario 2
with vaccine and no seasonal transmission 

```{r}
vax_smile_tests <- smile_fx(b0 = NULL, b1 = NULL, period = NULL, theta = 100, tau = 1, years = 23, 
                       beta_0 = -3.5, beta_1 = 6.86, vax = vacc.pcts, N1 = 20000, K = 50000, b_fixed = 0.001, output_df = TRUE)
vax_smile_tests %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  ggplot(aes(x = week, y = n)) +
  facet_wrap(~compartment, scales = "free") +
  geom_path() +
  theme_bw()
```
# Scenario 3
no vaccine and seasonal transmission 

```{r}
vax_smile_tests <- smile_fx(b0 = -30, b1 = 0.85, period = 3*52, theta = 100, tau = 1, years = 23, 
                       beta_0 = -3.5, beta_1 = 6.86, vax = rep(0, 23), N1 = 20000, K = 50000, output_df = TRUE)
vax_smile_tests %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  ggplot(aes(x = week, y = n)) +
  facet_wrap(~compartment, scales = "free") +
  geom_path() +
  theme_bw()
```

# Scenario 4
with vaccine and seasonal transmission 

```{r}
vax_smile_tests <- smile_fx(b0 = -30, b1 = 0.85, period = 3*52, theta = 100, tau = 1, years = 23, 
                       beta_0 = -3.5, beta_1 = 6.86, vax = vacc.pcts, N1 = 20000, K = 50000, output_df = TRUE)
vax_smile_tests %>% 
  pivot_longer(-week, names_to = "compartment", values_to = "n") %>% 
  mutate(compartment = factor(compartment, levels = c("S", "M", "I", "L", "E", "Z"))) %>% 
  ggplot(aes(x = week, y = n)) +
  facet_wrap(~compartment, scales = "free") +
  geom_path() +
  theme_bw()
```

